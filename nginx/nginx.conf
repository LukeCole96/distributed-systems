user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

http { # Docker handles traffic routing to other replicas...
    upstream channel-metadata-store {
        server channel-metadata-store:8080;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://channel-metadata-store;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

 # Forward metrics requests to one of the replicas (for Prometheus)
        location /metrics {
            proxy_pass http://channel-metadata-store/private/prometheus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}